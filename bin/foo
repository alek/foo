#!/bin/bash

#
# void.foo | main exec script
#

CMD=$1

if [ -z $CMD ]; then
	CMD="unknown"
fi

# local lib path override can be passed via $FOO_LIB_PATH env variable

if [ -z $FOO_LIB_PATH ]; then
	# change this to fit local environment
	#LIB_PATH="lib/:target/:$JAVA_HOME/Classes/"
	LIB_PATH="lib/:target/:/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Classes/"
else 
	$LIB_PATH=$FOO_LIB_PATH
fi

base_dir=$(dirname $0)/..
CLASSPATH=$(echo $base_dir/target/*.jar $base_dir/lib/*.jar | tr " " :)

# JAVA_OPTIONS="-client -XX:MaxPermSize=64m -verbose:gc -XX:-PrintCommandLineFlags -XX:-PrintClassHistogram -XX:+PrintGCDetails -XX:-PrintGCTimeStamps -XX:-PrintTenuringDistribution -XX:-TraceClassResolution -XX:-TraceClassUnloading -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp/heapdump.hprof -XX:+CMSClassUnloadingEnabled -Dcom.sun.management.jmxremote"
JAVA_OPTIONS="-client"

if [ $CMD == "class" ]; then
	java $JAVA_OPTIONS -cp $CLASSPATH com.voidlabs.foo.tools.FindClass $LIB_PATH $2
elif [ $CMD == "method" ]; then
	java $JAVA_OPTIONS -XX:MaxPermSize=128m -cp $CLASSPATH com.voidlabs.foo.tools.FindMethod $LIB_PATH $2
elif [ $CMD == "describe" ]; then
	java $JAVA_OPTIONS -XX:MaxPermSize=128m -cp $CLASSPATH com.voidlabs.foo.tools.DescribeClass $LIB_PATH $2
elif [ $CMD == "jar" ]; then
	java $JAVA_OPTIONS -cp $CLASSPATH com.voidlabs.foo.tools.JarTool $LIB_PATH $2
elif [ $CMD == "help" ]; then
	java $JAVA_OPTIONS -cp $CLASSPATH com.voidlabs.foo.tools.HelpCommand $LIB_PATH $2
elif [ $CMD == "unknown" ]; then
	echo "invalid command - use 'foo help' for more details"
else 
	echo "usage : foo [command] [params]"
fi
